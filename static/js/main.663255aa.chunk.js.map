{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","name","setName","valor","setValor","className","onSubmit","event","preventDefault","fetch","then","response","json","data","type","onChange","e","target","value","autoFocus","td","map","nombre","descripcion","valor_venta","tableGeneral","join","dangerouslySetInnerHTML","__html","resultValues","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAAe,I,oBCqDAA,MAhDf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAuBA,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,yCACA,uBAAMC,SA1BS,SAACC,GACpBA,EAAMC,iBACDP,GACHQ,MAAM,kDAAD,OAAmDR,IACvDS,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJT,EAASS,GACTX,EAAQ,QAmBR,UACE,uDACE,uBACEY,KAAK,OACLC,SAAU,SAACC,GAAD,OAAOd,EAAQc,EAAEC,OAAOC,QAClCjB,KAAK,SACLiB,MAAOjB,EACPkB,WAAS,IANb,UAUA,uBAAOL,KAAK,SAASI,MAAM,iBAE7B,gCA1Be,WAEnB,IAAME,EAAKjB,EAAMkB,KAAI,SAAAH,GACnB,MAAM,WAAN,OAAkBA,EAAMI,OAAxB,cAAoCJ,EAAMK,YAA1C,sCAAmFL,EAAMM,YAAzF,iBAEIC,EAAY,kCAA8BL,EAAGM,KAAK,cAAtC,YAClB,OAAO,qBAAKC,wBAAyB,CAACC,OAAQH,KAoBnCI,GAAP,aCnCOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.663255aa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport { render } from '@testing-library/react';\n\nfunction App() {\n  const [name, setName] = useState(\"\")\n  const [valor, setValor] = useState([])\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if(!!name) {\n      fetch(`https://kalapan.herokuapp.com/productos?codigo=${name}`)\n      .then(response => response.json())\n      .then(data => {\n        setValor(data)\n        setName(\"\")\n      })\n    }\n  }\n\n\n  const resultValues = () => {\n\n    const td = valor.map(value => {\n      return `<td><h4>${value.nombre} - ${value.descripcion}</h4></td> <td><h4>$ &nbsp;${value.valor_venta}</h4></td>`\n    })\n    const tableGeneral = `<br><table border=1><tr>${td.join('</tr></tr>')}</table>`\n    return <div dangerouslySetInnerHTML={{__html: tableGeneral}}></div>\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Kalapan</h1>\n        <form onSubmit={handleSubmit}>\n          <label>Cod de barras &nbsp;\n            <input \n              type=\"text\"\n              onChange={(e) => setName(e.target.value)}\n              name='codigo'\n              value={name}\n              autoFocus\n            />\n            &nbsp;\n          </label>\n          <input type=\"submit\" value='Consultar'/>\n        </form>\n        <div>{ resultValues()} </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}